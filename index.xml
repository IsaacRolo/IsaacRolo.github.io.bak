<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rolo&#39;s Note</title>
    <link>https://isaacrolo.github.io/</link>
    <description>Recent content on Rolo&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Jan 2020 15:42:05 +0800</lastBuildDate>
    
	<atom:link href="https://isaacrolo.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>路由器拆机刷机记录</title>
      <link>https://isaacrolo.github.io/post/breed/</link>
      <pubDate>Sun, 19 Jan 2020 15:42:05 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/breed/</guid>
      <description>拆机刷breed教程参考 老毛子固件资源 遇到的坑 k2路由器版本是22.6.532.231，必须拆机才能刷机 买了CH341A才发现以前改门禁卡时</description>
    </item>
    
    <item>
      <title>常用设计模式小结</title>
      <link>https://isaacrolo.github.io/post/pattern/</link>
      <pubDate>Mon, 13 Jan 2020 13:48:05 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/pattern/</guid>
      <description>总览 设计模式分类，共23种 创建型模式【对象】 单例；工厂；抽象工厂；原型；建造者 结构型模式【类结构】 适配器；桥接；装饰；组合；外观；享元；代理</description>
    </item>
    
    <item>
      <title>池化技术的思考</title>
      <link>https://isaacrolo.github.io/post/pool/</link>
      <pubDate>Thu, 14 Nov 2019 10:12:22 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/pool/</guid>
      <description>当我们频繁的使用一个资源对象时，特别是在高并发的情况下都可以考虑使用资源池的模式 资源池主要提供以下几个功能 提供资源对象 归还资源对象 销毁过期的</description>
    </item>
    
    <item>
      <title>魅族16s使用半年有感</title>
      <link>https://isaacrolo.github.io/post/16s/</link>
      <pubDate>Thu, 31 Oct 2019 09:49:13 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/16s/</guid>
      <description>本人于4月23日以3199的价格购入16s 当时选择16s看重的是他的非异形屏，横向线性马达，双扬声器，和小而美的flyme 但在半年的实际使用</description>
    </item>
    
    <item>
      <title>关于防止sql注入的思考</title>
      <link>https://isaacrolo.github.io/post/sqlinjection/</link>
      <pubDate>Wed, 30 Oct 2019 13:44:55 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/sqlinjection/</guid>
      <description>首先思考以下几个问题 preparedstatement一定能够防止sql注入吗？ preparedstatement防止sql注入的原理是什么</description>
    </item>
    
    <item>
      <title>Hadoop</title>
      <link>https://isaacrolo.github.io/post/hadoop/</link>
      <pubDate>Thu, 17 Oct 2019 11:22:14 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/hadoop/</guid>
      <description>Hadoop生态 计算框架 - Spark MapReduce 持久化存储 hdfs hbase 列式nosql数据库，存储结构化数据 适合大数据的实时查询 基于hadoop和zookeeper 只提</description>
    </item>
    
    <item>
      <title>如何设计Restful API</title>
      <link>https://isaacrolo.github.io/post/restful/</link>
      <pubDate>Tue, 06 Aug 2019 16:46:11 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/restful/</guid>
      <description>接口设计 组织机构 查询组织机构列表 Get /organization 新增组织机构 Post /organization Content-Type: application/json 1 2 3 4 { &amp;#34;previousOrg&amp;#34;: &amp;#34;xxx&amp;#34;, &amp;#34;orgName&amp;#34;: &amp;#34;xxx&amp;#34; } 修改组织机构 Put /organization/{orgId} 删除组织机构 Delete /organization/{orgId} 配置组织机构的数据权限 Put /organization/{orgId}/dataAuth 1 2 3</description>
    </item>
    
    <item>
      <title>TensorFlow入门</title>
      <link>https://isaacrolo.github.io/post/tensorflow/</link>
      <pubDate>Tue, 06 Aug 2019 10:22:08 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/tensorflow/</guid>
      <description>概念 TensorFlow TensorFlow是一个开源软件库，用于各种感知和语言理解任务的机器学习。 机器学习 机器学习是一门人工智能的科学，该领域的主要研究对象</description>
    </item>
    
    <item>
      <title>不用鼠标玩耍Chrome</title>
      <link>https://isaacrolo.github.io/post/vimium/</link>
      <pubDate>Thu, 01 Aug 2019 14:12:19 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/vimium/</guid>
      <description>Chrome插件Vimium Vimium provides keyboard shortcuts for navigation and control in the spirit of Vim. 常用快捷键 ？ 帮助页面，快捷键列表 h,j,k,l 移动光标左，下，上，右 gg , G 页面顶部，页面底部 J,K 切换</description>
    </item>
    
    <item>
      <title>MyGameList</title>
      <link>https://isaacrolo.github.io/post/mygamelist/</link>
      <pubDate>Wed, 24 Jul 2019 14:24:33 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/mygamelist/</guid>
      <description>2019 2 P5 4 MHW 9 Borderlands 3 异度之刃2 11 Pokemon Shield 2020 2 Fire Emblem 风花雪月 6 P5S</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://isaacrolo.github.io/post/redis/</link>
      <pubDate>Thu, 18 Jul 2019 10:55:08 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/redis/</guid>
      <description>概念 数据类型 String（字符串） string是redis最基本的类型，一个key对应一个value。string类型是Redis最基本的数</description>
    </item>
    
    <item>
      <title>Https</title>
      <link>https://isaacrolo.github.io/post/https/</link>
      <pubDate>Wed, 17 Jul 2019 10:29:31 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/https/</guid>
      <description>HTTPS 超文本传输安全协议是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://isaacrolo.github.io/post/elasticsearch/</link>
      <pubDate>Thu, 04 Jul 2019 10:52:11 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/elasticsearch/</guid>
      <description>MongoDB和Elasticsearch的对比 https://leriou.github.io/2019-01-09-mongodb-compareto-elasticsearch/ Elasticsearch 2.x中文文档 https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_add-an-index.html ES java api的选择 TransportClient【ES7.0废弃】 RestClient Java Low Level</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://isaacrolo.github.io/posts/elasticsearch/</link>
      <pubDate>Thu, 04 Jul 2019 10:52:11 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/elasticsearch/</guid>
      <description>MongoDB和Elasticsearch的对比 https://leriou.github.io/2019-01-09-mongodb-compareto-elasticsearch/ Elasticsearch 2.x中文文档 https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_add-an-index.html ES java api的选择 TransportClient【ES7.0废弃】 RestClient Java Low Level</description>
    </item>
    
    <item>
      <title>DateFormat</title>
      <link>https://isaacrolo.github.io/posts/dateformat/</link>
      <pubDate>Tue, 02 Jul 2019 16:37:56 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/dateformat/</guid>
      <description>日期按月分段【yyyy-MM】 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 String start=&amp;#34;2019-02&amp;#34;; String end=&amp;#34;2019-07&amp;#34;; Date startDate = null; Date endDate=null; SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&amp;#34;yyyy-MM&amp;#34;); try { startDate = simpleDateFormat.parse(start); endDate = simpleDateFormat.parse(end); } catch (ParseException e) { e.printStackTrace(); }</description>
    </item>
    
    <item>
      <title>Java8</title>
      <link>https://isaacrolo.github.io/posts/java8/</link>
      <pubDate>Wed, 12 Jun 2019 16:46:30 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/java8/</guid>
      <description>使用Lambda的List排序 https://my.oschina.net/HJCui/blog/1573344 遍历map 1 2 3 4 //传统方式 for (Map.Entry&amp;lt;String,Object&amp;gt; entry:sourceAsMap.entrySet()){ System.out.println(&amp;#34;Item : &amp;#34; + entry.getKey() + &amp;#34; Count : &amp;#34; + entry.getValue()); } 1 2 3 4 //lambda sourceAsMap.forEach((k,v)-&amp;gt;{ System.out.println(&amp;#34;k &amp;#34;+k+&amp;#34;;v &amp;#34;+v); }); 项目问题 JAVA反射功能，</description>
    </item>
    
    <item>
      <title>关于lambda表达式和Stream API的思考</title>
      <link>https://isaacrolo.github.io/post/java8/</link>
      <pubDate>Wed, 12 Jun 2019 16:46:30 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/java8/</guid>
      <description>Lambda表达式 语法格式 （抽象方法的参数列表）-&amp;gt; {抽象方法的实现} 首先来看看我们能在什么地方使用lambda表达式？ 任何需要函数式</description>
    </item>
    
    <item>
      <title>AOP</title>
      <link>https://isaacrolo.github.io/posts/aop/</link>
      <pubDate>Fri, 31 May 2019 10:13:29 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/aop/</guid>
      <description>spring aop后切如何获取目标方法中的某个局部变量值 https://bbs.csdn.net/topics/390215163 https://mrbird.cc/Spring-Boot-AOP%20log.html https://www.iteye.com/problems/70913</description>
    </item>
    
    <item>
      <title>Cookie_session</title>
      <link>https://isaacrolo.github.io/post/cookie_session/</link>
      <pubDate>Mon, 20 May 2019 19:30:33 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/cookie_session/</guid>
      <description>为什么在2个服务器之间来回请求，同一个服务器的sessionId会找不到 第一次请求【服务器A】 Response Headers Set-Cookie: JSESSIONID=4A8E119166F37F26FF1D8ACF38F9742C;path=/;HttpOnly 第二次请求【服务器B】 Response Headers Set-Cookie: JSESSIONID=1A08F620F659F860BF599FD37A51DCDD;path=/;HttpOnly Request Headers Cookie: JSESSIONID=4A8E119166F37F26FF1D8ACF38F9742C</description>
    </item>
    
    <item>
      <title>Cookie_session</title>
      <link>https://isaacrolo.github.io/posts/cookie_session/</link>
      <pubDate>Mon, 20 May 2019 19:30:33 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/cookie_session/</guid>
      <description>为什么在2个服务器之间来回请求，同一个服务器的sessionId会找不到 第一次请求【服务器A】 Response Headers Set-Cookie: JSESSIONID=4A8E119166F37F26FF1D8ACF38F9742C;path=/;HttpOnly 第二次请求【服务器B】 Response Headers Set-Cookie: JSESSIONID=1A08F620F659F860BF599FD37A51DCDD;path=/;HttpOnly Request Headers Cookie: JSESSIONID=4A8E119166F37F26FF1D8ACF38F9742C</description>
    </item>
    
    <item>
      <title>Springboot Note</title>
      <link>https://isaacrolo.github.io/posts/springboot-note/</link>
      <pubDate>Thu, 25 Apr 2019 15:16:43 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/springboot-note/</guid>
      <description>创建多个yml配置文件时，需要用到@PropertySource注解，但是该注解却不支持解析yml配置文件（默认支持解析properties</description>
    </item>
    
    <item>
      <title>Java爬虫—Jsoup</title>
      <link>https://isaacrolo.github.io/post/jsoup/</link>
      <pubDate>Wed, 24 Apr 2019 14:05:11 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/jsoup/</guid>
      <description>选择器的使用 基本用法 | tagname | 使用标签名来定位，例如 a | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | | ns|tag | 使用命名空间的标签定位，例如 fb:name 来查找 fb:name 元素 | | #id | 使用元素 id 定位，例如 #logo</description>
    </item>
    
    <item>
      <title>Jsoup</title>
      <link>https://isaacrolo.github.io/posts/jsoup/</link>
      <pubDate>Wed, 24 Apr 2019 14:05:11 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/jsoup/</guid>
      <description>选择器的使用 基本用法 | tagname | 使用标签名来定位，例如 a | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | | ns|tag | 使用命名空间的标签定位，例如 fb:name 来查找 fb:name 元素 | | #id | 使用元素 id 定位，例如 #logo</description>
    </item>
    
    <item>
      <title>垃圾收集器与内存分配策略</title>
      <link>https://isaacrolo.github.io/posts/jvm3/</link>
      <pubDate>Thu, 28 Mar 2019 20:36:54 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/jvm3/</guid>
      <description>垃圾收集器主要作用于内存的哪部分？ 不考虑回收：程序计数器，虚拟机栈，本地方法栈 原因：方法结束或线程结束时，内存自然会回收 回收：堆，方法区 原因</description>
    </item>
    
    <item>
      <title>深入理解java虚拟机读书笔记</title>
      <link>https://isaacrolo.github.io/post/jvm/</link>
      <pubDate>Thu, 28 Mar 2019 20:36:54 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/jvm/</guid>
      <description>垃圾收集器与内存分配策略 垃圾收集器主要作用于内存的哪部分？ 不考虑回收：程序计数器，虚拟机栈，本地方法栈 原因：方法结束或线程结束时，内存自然会</description>
    </item>
    
    <item>
      <title>ETL工具Informatica实战</title>
      <link>https://isaacrolo.github.io/post/informatica/</link>
      <pubDate>Thu, 28 Mar 2019 15:08:08 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/informatica/</guid>
      <description>使用Informatica将数据导出到文件或数据库 导出时间比较 20300条数据 导出为文件：7s 导出到数据库：12s 187100条数据 导出为文</description>
    </item>
    
    <item>
      <title>Informatica</title>
      <link>https://isaacrolo.github.io/posts/informatica/</link>
      <pubDate>Thu, 28 Mar 2019 15:08:08 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/informatica/</guid>
      <description>使用Informatica将数据导出到文件或数据库 导出时间比较 20300条数据 导出为文件：7s 导出到数据库：12s 187100条数据 导出为文</description>
    </item>
    
    <item>
      <title>RestTemplate</title>
      <link>https://isaacrolo.github.io/post/resttemplate/</link>
      <pubDate>Thu, 21 Mar 2019 14:06:47 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/resttemplate/</guid>
      <description>RestTemplate 1 2 3 4 5 6 7 8 9 10 11 12 @Test public void restTemplatePost() { String url = &amp;#34;http://127.0.0.1/trusted&amp;#34;; RestTemplate restTemplate = new RestTemplate(); HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED); MultiValueMap&amp;lt;String, String&amp;gt; params = new LinkedMultiValueMap&amp;lt;&amp;gt;(); params.add(&amp;#34;username&amp;#34;, &amp;#34;admin&amp;#34;); HttpEntity&amp;lt;MultiValueMap&amp;lt;String, String&amp;gt;&amp;gt; requestEntity = new HttpEntity&amp;lt;&amp;gt;(params, headers); String result = restTemplate.postForObject(url, requestEntity, String.class); System.out.println(result); } HttpClient 普通的post请求 1 2 3 4</description>
    </item>
    
    <item>
      <title>RestTemplate</title>
      <link>https://isaacrolo.github.io/posts/resttemplate/</link>
      <pubDate>Thu, 21 Mar 2019 14:06:47 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/resttemplate/</guid>
      <description>RestTemplate 1 2 3 4 5 6 7 8 9 10 11 12 @Test public void restTemplatePost() { String url = &amp;#34;http://127.0.0.1/trusted&amp;#34;; RestTemplate restTemplate = new RestTemplate(); HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED); MultiValueMap&amp;lt;String, String&amp;gt; params = new LinkedMultiValueMap&amp;lt;&amp;gt;(); params.add(&amp;#34;username&amp;#34;, &amp;#34;admin&amp;#34;); HttpEntity&amp;lt;MultiValueMap&amp;lt;String, String&amp;gt;&amp;gt; requestEntity = new HttpEntity&amp;lt;&amp;gt;(params, headers); String result = restTemplate.postForObject(url, requestEntity, String.class); System.out.println(result); } HttpClient 普通的post请求 1 2 3 4</description>
    </item>
    
    <item>
      <title>整合Zuul</title>
      <link>https://isaacrolo.github.io/post/zuul/</link>
      <pubDate>Wed, 20 Mar 2019 13:46:10 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/zuul/</guid>
      <description>场景：仅作为web服务集群与外界请求之间的网关，和Nginx结合使用 Zuul的使用 添加依赖 1 2 3 4 5 6 7 8 9 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-zuul&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置文件 将Zuu</description>
    </item>
    
    <item>
      <title>整合Zuul</title>
      <link>https://isaacrolo.github.io/posts/zuul/</link>
      <pubDate>Wed, 20 Mar 2019 13:46:10 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/zuul/</guid>
      <description>场景：仅作为web服务集群与外界请求之间的网关，和Nginx结合使用 Zuul的使用 添加依赖 1 2 3 4 5 6 7 8 9 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-zuul&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置文件 将Zuu</description>
    </item>
    
    <item>
      <title>SpringBoot 迁移</title>
      <link>https://isaacrolo.github.io/post/springboot-transfer/</link>
      <pubDate>Tue, 19 Mar 2019 13:50:30 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/springboot-transfer/</guid>
      <description>SpringBoot使用jsp作为模板引擎 Maven构建的多module SpringBoot服务打包方式 不应该给 parent 项目添加 spring-boot-maven-plugin 构建插件（该插件</description>
    </item>
    
    <item>
      <title>整合HystrixDashboard和Turbine</title>
      <link>https://isaacrolo.github.io/post/hystrixdashboard/</link>
      <pubDate>Tue, 19 Mar 2019 11:32:32 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/hystrixdashboard/</guid>
      <description>前提：springboot 1.5.19.RELEASE springcloud Edgware.SR5 场景：服务调用方使用Feign+Hystrix实现微服务之间的通信；新建一个Hystrix Dashboard</description>
    </item>
    
    <item>
      <title>整合HystrixDashboard和Turbine</title>
      <link>https://isaacrolo.github.io/posts/hystrixdashboard/</link>
      <pubDate>Tue, 19 Mar 2019 11:32:32 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/hystrixdashboard/</guid>
      <description>前提：springboot 1.5.19.RELEASE springcloud Edgware.SR5 场景：服务调用方使用Feign+Hystrix实现微服务之间的通信；新建一个Hystrix Dashboard</description>
    </item>
    
    <item>
      <title>Tableau发布视图，并在页面中展示</title>
      <link>https://isaacrolo.github.io/posts/tableau/</link>
      <pubDate>Mon, 11 Mar 2019 10:09:51 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/tableau/</guid>
      <description>Tableau Desktop10.4安装 Tableau Server10.4安装 输入密钥激活 desktop和server 安装完成后浏览器输入http://127.0.</description>
    </item>
    
    <item>
      <title>Tableau可视化图表集成</title>
      <link>https://isaacrolo.github.io/post/tableau/</link>
      <pubDate>Mon, 11 Mar 2019 10:09:51 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/tableau/</guid>
      <description>Tableau Desktop10.4安装 Tableau Server10.4安装 输入密钥激活 desktop和server 安装完成后浏览器输入http://127.0.</description>
    </item>
    
    <item>
      <title>spring</title>
      <link>https://isaacrolo.github.io/posts/spring-boot/</link>
      <pubDate>Fri, 01 Mar 2019 15:26:53 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/posts/spring-boot/</guid>
      <description>一、Spring Boot 入门 1、Spring Boot 简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一个大整合； J2EE开发的一站式解决</description>
    </item>
    
    <item>
      <title>反射</title>
      <link>https://isaacrolo.github.io/post/reflection/</link>
      <pubDate>Sat, 19 Jan 2019 12:38:12 +0800</pubDate>
      
      <guid>https://isaacrolo.github.io/post/reflection/</guid>
      <description>反射的理解 允许程序在运行期间获取任何类的内部信息，且能直接操作对象的内部属性和方法 反射的动态性 运行时才确定需要创建的类 1 2 3 4 public class Object(String classpath){ Class clazz=Class.forName(classpath); return</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://isaacrolo.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://isaacrolo.github.io/about/</guid>
      <description>&amp;lt;😶&amp;gt; &amp;lt;普通码农/&amp;gt; &amp;lt;电子产品发烧/&amp;gt; &amp;lt;爱折腾/&amp;gt; &amp;lt;佛系追番/&amp;gt; &amp;lt;云游戏玩</description>
    </item>
    
  </channel>
</rss>